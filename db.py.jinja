import dbmeta
# Do not edit this file, it's autogenerated

{% for ent in package.tables %}
class {{ent.name}}:
    def __init__(self):
        dbmeta.DbMeta.init(self)

    @classmethod
    def get(cls, db, id):
        return dbmeta.DbMeta.get(db, cls, id)
{% endfor %}

def init(db):
    db.deploypacket('{{package.name}}', {{package.version}}, [
    {%- for ent in package.tables %}
    "CREATE TABLE {{ent.name}} ({{ent.primary.name}} {{ent.primary.datatype}} NOT NULL {%- for col in ent.columns %}, {{col.name}} {{col.datatype}} NOT NULL{%- endfor %}, PRIMARY KEY({{ent.primary.name}}){%- for col in ent.columns %}{%- if col.reference != None %}, FOREIGN KEY ({{col.name}}) REFERENCES {{col.reference}}(id){%- endif %}{%- endfor %})"{{"," if not loop.last}}
    {%- endfor %}])
    {%- for ent in package.tables %}
    dbmeta.DbMeta.set({{ent.name}}, '{{ent.name}}', ['{{ent.primary.name}}'{%- for column in ent.columns %}, '{{column.name}}'{%- endfor %}])
    {%- endfor %}


